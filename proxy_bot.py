import os
import logging
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
)

# –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ["BOT_TOKEN"]
ADMIN_USER_ID = int(os.environ["ADMIN_USER_ID"])
WEBHOOK_URL = os.environ["WEBHOOK_URL"]  # –ù–∞–ø—Ä–∏–º–µ—Ä: https://your-bot.onrender.com
PORT = int(os.environ.get("PORT", 8443))

# –•—Ä–∞–Ω–∏–ª–∏—â–µ: –∑–∞–ø–æ–º–∏–Ω–∞–µ–º, –∫–æ–º—É –æ—Ç–≤–µ—á–∞–µ—Ç –∞–¥–º–∏–Ω (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–¥–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞)
user_message_map = {}

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –æ–Ω–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    message = update.message

    if user.id == ADMIN_USER_ID:
        # –ê–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        target_user_id = user_message_map.get(ADMIN_USER_ID)
        if not target_user_id:
            await message.reply_text("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞. –î–æ–∂–¥–∏—Ç–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return

        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
            if message.text:
                await context.bot.send_message(
                    chat_id=target_user_id,
                    text=f"üì¨ –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n{message.text}"
                )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
            if message.photo:
                await context.bot.send_photo(
                    chat_id=target_user_id,
                    photo=message.photo[-1].file_id,
                    caption="üì¨ –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ñ–æ—Ç–æ)"
                )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            if message.document:
                await context.bot.send_document(
                    chat_id=target_user_id,
                    document=message.document.file_id,
                    caption="üì¨ –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–¥–æ–∫—É–º–µ–Ω—Ç)"
                )
            await message.reply_text(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}")
            await message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
    else:
        # –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –∞–¥–º–∏–Ω—É
        user_message_map[ADMIN_USER_ID] = user.id
        try:
            username = user.username or "‚Äî"
            text = message.text or ""
            await context.bot.send_message(
                chat_id=ADMIN_USER_ID,
                text=f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{username} (ID: {user.id}):\n\n{text}"
            )
            if message.photo:
                await context.bot.send_photo(
                    chat_id=ADMIN_USER_ID,
                    photo=message.photo[-1].file_id,
                    caption=f"üì© –§–æ—Ç–æ –æ—Ç @{username} (ID: {user.id})"
                )
            if message.document:
                await context.bot.send_document(
                    chat_id=ADMIN_USER_ID,
                    document=message.document.file_id,
                    caption=f"üì© –î–æ–∫—É–º–µ–Ω—Ç –æ—Ç @{username} (ID: {user.id})"
                )
            await message.reply_text("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∞–¥–º–∏–Ω—É: {e}")
            await message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å webhook
def main():
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º webhook-—Å–µ—Ä–≤–µ—Ä
    application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=WEBHOOK_URL,
        url_path="",  # Webhook –±—É–¥–µ—Ç –Ω–∞ –∫–æ—Ä–Ω–µ–≤–æ–º –ø—É—Ç–∏: https://.../
        cert=None,    # Render –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç HTTPS, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω—É–∂–µ–Ω
    )

if __name__ == "__main__":
    main()
